import pygame
from pygame import *


DARK_BLUE = (0, 0, 105)
BACK = (190, 243, 180)
WIN_WIDTH = 600
WIN_HEIGHT = 600
window = display.set_mode((WIN_WIDTH, WIN_HEIGHT))
window.fill(BACK)

game = True
finish = False
clock = time.Clock()
FPS = 60


class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, player_speed, width, height):
        super().__init__()
        self.image = transform.scale(image.load(player_image), (width, height))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
        self.start_x = player_x
        self.start_y = player_y

    def restart(self):
        self.rect.x = self.start_x
        self.rect.y = self.start_y

    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))


class Player(GameSprite):
    def update_l(self) -> None:
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < WIN_HEIGHT - 80:
            self.rect.y += self.speed

    def update_r(self) -> None:
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < WIN_HEIGHT - 80:
            self.rect.y += self.speed


class Area:
    def __init__(self, x=0, y=0, width=10, height=10, color=None):
        self.rect = pygame.Rect(x, y, width, height)
        self.fill_color = color

    def color(self, new_color):
        self.fill_color = new_color

    def fill(self):
        pygame.draw.rect(window, self.fill_color, self.rect)

    def outline(self, frame_color, thinkness):
        pygame.draw.rect(window, frame_color, self.rect, thinkness)


class Label(Area):
    def set_text(self, text, fsize=14, text_color=(0, 0, 0)):
        self.image = pygame.font.SysFont('verdana', fsize).render(text, True, text_color)

    def draw(self, shift_x, shift_y):
        self.fill()
        window.blit(self.image, (self.rect.x + shift_x, self.rect.y + shift_y))


racket_1 = Player('racket.png', 30, 200, 4, 50, 150)
racket_2 = Player('racket.png', 520, 200, 4, 50, 150)
ball = GameSprite('tennis_ball.png', 200, 200, 4, 50, 50)

font.init()
font = font.Font(None, 35)
lose_1 = font.render('Player 1 lose!', True, (195, 0, 0))
lose_2 = font.render('Player 2 lose!', True, (195, 0, 0))

speed_x = 3
speed_y = 3

count_1, count_2 = 0, 0

score_text = Label(380, 0, 50, 50, BACK)
score_text.set_text('SCORE:', 45, DARK_BLUE)
score_text.draw(20, 20)

score1 = Label(430, 55, 55 + 50, 40, BACK)
score1.set_text(0, 45, DARK_BLUE)
score1.draw(0, 0)

score2 = Label(480, 55, 50, 40, BACK)
score2.set_text(0, 45, DARK_BLUE)
score2.draw(0, 50)

while game:
    for e in event.get():
        if e.type == QUIT:
            game = False

    if not finish:
        window.fill(BACK)
        racket_1.update_l()
        racket_2.update_r()
        ball.rect.x += speed_x
        ball.rect.x += speed_y

        score_text.set_text('SCORE:', 45, DARK_BLUE)
        score_text.draw(20, 20)
        score1.set_text(str(count_1), 30, DARK_BLUE)
        score1.draw(0, 0)
        score2.set_text(str(count_2), 30, DARK_BLUE)
        score2.draw(50, -50)

        if sprite.collide_rect(racket_1, ball) or sprite.collide_rect(racket_2, ball):
            speed_x *= -1
            speed_y *= -1

        if ball.rect.y > WIN_HEIGHT - 50 or ball.rect.y < 0:
            speed_y *= -1

        if ball.rect.x < 0:
            count_1 += 1
            ball.restart()
            if count_1 == 3:
                finish = True
                window.blit(lose_1, (230, 270))
                game_over = True

        if ball.rect.x > WIN_WIDTH:
            count_2 += 1
            ball.restart()
            if count_2 == 3:
                finish = True
                window.blit(lose_2, (230, 270))
                game_over = True

        racket_1.reset()
        racket_2.reset()
        ball.reset()

    display.update()
    clock.tick(FPS)
